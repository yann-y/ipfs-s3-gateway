// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameTNsBucket = "t_ns_bucket"

// TNsBucket mapped from table <t_ns_bucket>
type TNsBucket struct {
	ID           int32          `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	CreatedAt    time.Time      `gorm:"column:created_at" json:"created_at"`
	UpdatedAt    time.Time      `gorm:"column:updated_at" json:"updated_at"`
	DeletedAt    gorm.DeletedAt `gorm:"column:deleted_at" json:"deleted_at"`
	Bucketid     string         `gorm:"column:bucketid;not null" json:"bucketid"`
	Name         string         `gorm:"column:name;not null" json:"name"`
	UUID         string         `gorm:"column:uuid;not null" json:"uuid"`
	Count        int64          `gorm:"column:count" json:"count"`
	Size         int64          `gorm:"column:size" json:"size"`
	Owner        int32          `gorm:"column:owner" json:"owner"`
	Tenant       string         `gorm:"column:tenant" json:"tenant"`
	Policy       string         `gorm:"column:policy" json:"policy"`
	Versioning   string         `gorm:"column:versioning" json:"versioning"`
	Profile      string         `gorm:"column:profile" json:"profile"`
	Storageclass string         `gorm:"column:storageclass" json:"storageclass"`
	Location     string         `gorm:"column:location" json:"location"`
	Encryption   string         `gorm:"column:encryption;default:{"Algorithm":"AES256","MasterKeyID":""}" json:"encryption"`
}

// TableName TNsBucket's table name
func (*TNsBucket) TableName() string {
	return TableNameTNsBucket
}
